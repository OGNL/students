<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="school.binjiang.mapper.StudentMapper">
	<insert id="add" parameterType="Student">
		insert into t_student (stuNo, stuName, gender, major, birthday, enterTime, phone, address )
		values(#{stuNo}, #{stuName}, #{gender}, #{major}, #{birthday}, #{enterTime}, #{phone}, #{address}); 
	</insert>
	
	<delete id="delete" parameterType="int">
		delete from t_student where stuId = #{stuId};
	</delete>
	
	<update id="update" parameterType="Student">
		update t_student set stuName = #{stuName}, gender = #{gender}, major = #{major},
		birthday = #{birthday}, enterTime = #{enterTime}, phone = #{phone}, address = #{address} where stuNo = #{stuNo} 
	</update>
	
	<select id="findByStuNo" parameterType="String" resultType="Student">
		select * from t_student where stuNo = #{stuNo}
	</select>
	
	<select id="findById" parameterType="int" resultType="Student">
		select * from t_student where stuId = #{stuId}
	</select>
	
	<sql id="query" >
				and 1 = 1
			<if test="params.stuNo != null and params.stuNo != ''">
				and stuNo = #{params.stuNo}
			</if>
			<if test="params.stuName != null and params.stuName != ''">
				and stuName like concat('%',#{params.stuName},'%')
			</if>
			<if test="params.gender != null and params.gender != ''">
				and gender = #{params.gender}
			</if>
			<if test="params.major != null and params.major != ''">
				and major like concat('%',#{params.major},'%')
			</if>
			
	</sql>
	
	<select id="findByNoNameGenderMajor" parameterType="PageBean" resultType="Student">
		select * from t_student 
		<where>
			<include refid="query"/>
		</where>
	</select>
	
	<select id="getStudentCount" parameterType="PageBean" resultType="int">
		select count(*) from t_student
		<where>
			<include refid="query"/>
		</where>
	</select>
	
	<select id="findByNoAndName" parameterType="Student" resultType="Student">
		select * from t_student where stuNo = #{stuNo} and stuName = #{stuName}
	</select>
	
	<select id="findNumByMajor" parameterType="StudentVo" resultType="StudentVo">
		select major, count(*) rs from t_student where enterTime &gt;= #{startDate} and enterTime &lt;= #{endDate} GROUP BY major
	</select>
	
	<select id="findNumByGender" parameterType="StudentVo" resultType="StudentVo">
		select gender, count(*) rs from t_student where enterTime &gt;= #{startDate} and enterTime &lt;= #{endDate} GROUP BY gender
	</select>
	
	<select id="findNumByAddress" parameterType="StudentVo" resultType="StudentVo">
		select address, count(*) rs from t_student where enterTime &gt;= #{startDate} and enterTime &lt;= #{endDate} 
		GROUP BY address order by rs desc
	</select>
	

		
	
</mapper>